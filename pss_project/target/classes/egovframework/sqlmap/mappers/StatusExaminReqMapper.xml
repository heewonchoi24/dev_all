<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="statusExaminReq">

	<select id="statusExaminInsttList" parameterType="zvl" resultType="zvl">
		SELECT
			A.INSTT_CD, 
			A.INSTT_NM, 
			A.INSTT_CL_CD,
			C.CODE_NM INSTT_CL_NM,
			A.UPPER_INSTT_CD,
			D.DCNT
		FROM 
			INSTITUTION_MASTR A
		<if test='user_id != null and user_id != ""'>
			LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
		</if>
			LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
			JOIN
			(
				SELECT
					A.INSTT_CL_CD,
				   COUNT(C.CODE_NM) DCNT
				FROM 
					INSTITUTION_MASTR A
				<if test='user_id != null and user_id != ""'>
					LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
				</if>
					LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
				WHERE
					A.DELETE_YN = 'N'
				<if test='user_id != null and user_id != ""'>
					AND B.DELETE_YN ='N'
					AND B.USER_ID = #{user_id}
				</if>
				<if test='instt_cl_cd != null and instt_cl_cd != ""'>
					AND A.INSTT_CL_CD = #{instt_cl_cd}
				</if>
				GROUP BY 
					INSTT_CL_CD
			) D ON A.INSTT_CL_CD = D.INSTT_CL_CD
		WHERE
			A.DELETE_YN = 'N'
		<if test='user_id != null and user_id != ""'>
			AND B.DELETE_YN ='N'
			AND B.USER_ID = #{user_id}
		</if>
		<if test='instt_cl_cd != null and instt_cl_cd != ""'>
			AND A.INSTT_CL_CD = #{instt_cl_cd}
		</if>
		<if test='instt_cd != null and instt_cd != ""'>
			AND A.INSTT_CD = #{instt_cd}
		</if>		
	</select>

	<select id="statusExaminInsttSelectList" parameterType="zvl" resultType="zvl">
		SELECT
			A.INSTT_CD, 
			A.INSTT_NM, 
			A.INSTT_CL_CD,
			C.CODE_NM INSTT_CL_NM,
			A.UPPER_INSTT_CD,
			D.DCNT
		FROM 
			INSTITUTION_MASTR A
		<if test='user_id != null and user_id != ""'>
			LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
		</if>
			LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
			JOIN
			(
				SELECT
					A.INSTT_CL_CD,
				   COUNT(C.CODE_NM) DCNT
				FROM 
					INSTITUTION_MASTR A
				<if test='user_id != null and user_id != ""'>
					LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
				</if>
					LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
				WHERE
					A.DELETE_YN = 'N'
				<if test='user_id != null and user_id != ""'>
					AND B.DELETE_YN ='N'
					AND B.USER_ID = #{user_id}
				</if>
				<if test='instt_cl_cd != null and instt_cl_cd != ""'>
					AND A.INSTT_CL_CD = #{instt_cl_cd}
				</if>
				GROUP BY 
					INSTT_CL_CD
			) D ON A.INSTT_CL_CD = D.INSTT_CL_CD
		WHERE
			A.DELETE_YN = 'N'
		<if test='user_id != null and user_id != ""'>
			AND B.DELETE_YN ='N'
			AND B.USER_ID = #{user_id}
		</if>
		<if test='instt_cl_cd != null and instt_cl_cd != ""'>
			AND A.INSTT_CL_CD = #{instt_cl_cd}
		</if>	
	</select>
	
	<select id="statusExaminInsttTableList" parameterType="zvl" resultType="zvl">
		SELECT
			LV,
			INSTT_CD,
			INSTT_NM,
			DCNT
		FROM
		(
			SELECT
				*
			FROM
			(
				SELECT
					'1' LV,
					A.INSTT_CL_CD INSTT_CD,
					C.CODE_NM INSTT_NM,
					COUNT(A.INSTT_CD) DCNT
				FROM 
					INSTITUTION_MASTR A
				<if test='user_id != null and user_id != ""'>
					LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
				</if>
					LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
				WHERE
					A.DELETE_YN = 'N'
				<if test='user_id != null and user_id != ""'>
					AND B.DELETE_YN ='N'
					AND B.USER_ID = #{user_id}
				</if>
				<if test='instt_cl_cd != null and instt_cl_cd != ""'>
					AND A.INSTT_CL_CD = #{instt_cl_cd}
				</if>
				GROUP BY 
					A.INSTT_CL_CD,
					C.CODE_NM
			) A
			UNION ALL
			SELECT
				*
			FROM
			(
				SELECT
					'2' LV,
					A.INSTT_CD,
					A.INSTT_NM,
					COUNT(A.INSTT_CD) DCNT
				FROM 
					INSTITUTION_MASTR A
				<if test='user_id != null and user_id != ""'>
					LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
				</if>
					LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
				WHERE
					A.DELETE_YN = 'N'
				<if test='user_id != null and user_id != ""'>
					AND B.DELETE_YN ='N'
					AND B.USER_ID = #{user_id}
				</if>
				<if test='instt_cl_cd != null and instt_cl_cd != ""'>
					AND A.INSTT_CL_CD = #{instt_cl_cd}
				</if>
				GROUP BY 
					A.INSTT_CD,
					A.INSTT_NM
			) B
		)A
	</select>
	
	
	<select id="statusExaminInsttEvlOrderList" parameterType="zvl" resultType="zvl">
		SELECT DISTINCT
			ORDER_NO
		FROM
			STATUS_EXAMIN_IDX
	</select>
	
	<select id="statusExaminInsttClCdList" parameterType="zvl" resultType="zvl">
		SELECT DISTINCT
			A.INSTT_CL_CD,
			C.CODE_NM INSTT_CL_NM
		FROM 
			INSTITUTION_MASTR A
		<if test='user_id != null and user_id != ""'>
			LEFT JOIN INSTT_INSCTR_MAP B ON A.INSTT_CD = B.INSTT_CD
		</if>
			LEFT JOIN CMMN_CD_MASTR C ON A.INSTT_CL_CD = C.CODE
		WHERE
			A.DELETE_YN = 'N'
		<if test='user_id != null and user_id != ""'>
			AND B.DELETE_YN ='N'
			AND B.USER_ID = #{user_id}
		</if>
	</select>
	
	<select id="statusExaminIdxList" parameterType="zvl" resultType="zvl">
		SELECT
			LV,
			ORDER_NO,
			IDX,
			CONTENTS,
			DCNT
		FROM
		(
			SELECT
				*
			FROM
			(
				SELECT
					'1' LV,
					ORDER_NO,
					LCLAS_ORDER IDX,
					LCLAS CONTENTS,
					COUNT(*) DCNT
				FROM 
					STATUS_EXAMIN_IDX
				WHERE
					1=1
				<if test='order_no != null and order_no != ""'>
					AND ORDER_NO = #{order_no}
				</if>
				GROUP BY
					ORDER_NO, 
					LCLAS
				ORDER BY 
					LCLAS_ORDER ASC
			) A
			UNION ALL
			SELECT
				*
			FROM
			(
				SELECT
					'2' LV,
					ORDER_NO,
					/* MLSFC_ORDER IDX, */
					CONCAT(LCLAS_ORDER, '.', MLSFC_ORDER) IDX,
					MLSFC CONTENTS,
					COUNT(*) DCNT
				FROM 
					STATUS_EXAMIN_IDX
				WHERE
					1=1
				<if test='order_no != null and order_no != ""'>
					AND ORDER_NO = #{order_no}
				</if>
				GROUP BY
					ORDER_NO, 
					MLSFC
				ORDER BY 
					LCLAS_ORDER ASC, MLSFC_ORDER ASC
			) B 
			<!-- SELECT
			UNION ALL
				*
			FROM
			(
				SELECT
					'3' LV,
					ORDER_NO,
					/* CONCAT(MLSFC_ORDER, '-', CHECK_ITEM_ORDER) IDX, */
					CONCAT(LCLAS_ORDER, '.', MLSFC_ORDER, '.', SCLAS_ORDER) IDX,
					SCLAS CONTENTS,
					COUNT(*) DCNT
				FROM 
					STATUS_EXAMIN_IDX
				WHERE
					1=1
				<if test='order_no != null and order_no != ""'>
					AND ORDER_NO = #{order_no}
				</if>
				GROUP BY 
					SCLAS
				ORDER BY 
					LCLAS_ORDER ASC, MLSFC_ORDER ASC, SCLAS_ORDER ASC
			) C -->
			UNION ALL
			SELECT
				*
			FROM
			(
				SELECT
					'4' LV,
					ORDER_NO,
					/* CONCAT(MLSFC_ORDER, '-', CHECK_ITEM_ORDER) IDX, */
					<!-- CONCAT(LCLAS_ORDER, '.', MLSFC_ORDER, '.', SCLAS_ORDER ,'.', CHECK_ITEM_ORDER) IDX, -->
					CONCAT(LCLAS_ORDER, '.', MLSFC_ORDER, '.', CHECK_ITEM_ORDER) IDX,
					CHECK_ITEM CONTENTS,
					COUNT(*) DCNT
				FROM 
					STATUS_EXAMIN_IDX
				WHERE
					1=1
				<if test='order_no != null and order_no != ""'>
					AND ORDER_NO = #{order_no}
				</if>
				GROUP BY 
					CHECK_ITEM
				ORDER BY 
					LCLAS_ORDER ASC, MLSFC_ORDER ASC, SCLAS_ORDER ASC, CHECK_ITEM_ORDER ASC
			) D
		) A
	</select>
	
	<select id="statusExaminInsttEvlList" parameterType="zvl" resultType="zvl">
		SELECT
			A.INSTT_CD,
			A.INSTT_NM,
			A.INSTT_CL_CD,
			B.INDEX_SEQ,
			B.ORDER_NO,
			B.LCLAS_ORDER,
			CONCAT(B.LCLAS_ORDER, '.', B.MLSFC_ORDER) MLSFC_ORDER,
			CONCAT(B.LCLAS_ORDER, '.', B.MLSFC_ORDER, '.', B.SCLAS_ORDER) SCLAS_ORDER,
			CONCAT(B.LCLAS_ORDER, '.', B.MLSFC_ORDER, '.', B.SCLAS_ORDER, '.', B.CHECK_ITEM_ORDER) CHECK_ITEM_ORDER,
			C.STATUS,
			C.ATCHMNFL_ID
		FROM
			INSTITUTION_MASTR A
			LEFT JOIN STATUS_EXAMIN_IDX B ON B.DELETE_YN = 'N'
			LEFT JOIN STATUS_EXAMIN_EVL C ON B.INDEX_SEQ = C.INDEX_SEQ AND A.INSTT_CD = C.INSTT_CD AND C.DELETE_YN = 'N'
		<if test='user_id != null and user_id != ""'>
			LEFT JOIN INSTT_INSCTR_MAP D ON A.INSTT_CD = D.INSTT_CD
		</if>
		WHERE
			1=1
				AND B.ORDER_NO = #{order_no}
			<if test='user_id != null and user_id != ""'>
				AND D.USER_ID = #{user_id}
			</if>
		ORDER BY A.INSTT_CD,B.LCLAS_ORDER, B.MLSFC_ORDER, B.SCLAS_ORDER, B.CHECK_ITEM_ORDER
	</select>

	<select id="statusExaminInsttDetailList" parameterType="zvl" resultType="zvl">
		SELECT 
			A.INDEX_SEQ, 
			A.ORDER_NO, 
			A.LCLAS, 
			A.LCLAS_ORDER, 
			A.MLSFC, 
			A.MLSFC_ORDER, 
			A.SCLAS, 
			A.SCLAS_ORDER, 
			A.CHECK_ITEM, 
			A.CHECK_ITEM_ORDER, 
			A.HELP_COMMENT, 
			A.REMARK, 
			A.RESULT_SE, 
			A.EXCP_PERM_YN,
			A.MNG_LEVEL_INDEX_SEQ,
			B.ATCHMNFL_ID,
			B.MEMO,
			B.EVL_OPINION,
			B.INSTT_CD, 
			B.FOBJCT_RESN,
			B.FOBJCT_DE,
			B.FOBJCT_ATCHMNFL_ID,
			FORMAT(B.RESULT_SCORE1, 0) RESULT_SCORE1,
			FORMAT(B.RESULT_SCORE2, 0) RESULT_SCORE2, 
			B.STATUS,
			C.LCLAS_CNT,
			D.MLSFC_CNT,
			E.SCLAS_CNT
		FROM 
			STATUS_EXAMIN_IDX A
			LEFT JOIN STATUS_EXAMIN_EVL B ON A.INDEX_SEQ = B.INDEX_SEQ AND B.INSTT_CD = #{instt_cd}
			LEFT JOIN ( SELECT INDEX_SEQ, COUNT(*) LCLAS_CNT FROM STATUS_EXAMIN_IDX WHERE ORDER_NO = #{order_no} GROUP BY LCLAS ) C ON A.INDEX_SEQ = C.INDEX_SEQ 
			LEFT JOIN ( SELECT INDEX_SEQ, COUNT(*) MLSFC_CNT FROM STATUS_EXAMIN_IDX WHERE ORDER_NO = #{order_no} GROUP BY MLSFC ) D ON A.INDEX_SEQ = D.INDEX_SEQ
			LEFT JOIN ( SELECT INDEX_SEQ, COUNT(*) SCLAS_CNT FROM STATUS_EXAMIN_IDX WHERE ORDER_NO = #{order_no} GROUP BY SCLAS ) E ON A.INDEX_SEQ = E.INDEX_SEQ
		WHERE 
			1=1 
			AND A.ORDER_NO = #{order_no}
		<if test='s_index_seq != null and s_index_seq != ""'>
			AND A.INDEX_SEQ = #{s_index_seq}
		</if>
		ORDER BY A.LCLAS_ORDER,A.MLSFC_ORDER,A.SCLAS_ORDER,A.CHECK_ITEM_ORDER
	</select>

	<select id="statusExaminInsttFileList" parameterType="zvl" resultType="zvl">
		SELECT 
		    A.INSTT_CD,
			C.FILE_ID,
			C.FILE_NAME,
			C.SAVE_FILE_NAME,
			C.FILE_PATH,
			SUBSTRING(C.FILE_EXTSN,1,3) FILE_EXTSN
		FROM 
			STATUS_EXAMIN_GNRLZ_EVL A,
			ATTACHMENT_FILE_MAP B, 
			ATTACHMENT_FILE_MASTR C 
		WHERE 
		1=1 
			AND A.ORDER_NO  = #{order_no}
			AND A.INSTT_CD  = #{instt_cd}
			AND A.ATCHMNFL_ID = B.ATCHMNFL_ID
			AND B.FILE_ID = C.FILE_ID
	</select>

	<select id="statusExaminInsttDetailFileList" parameterType="zvl" resultType="zvl">
		SELECT
			A.MNG_LEVEL_IDX_SEQ INDEX_SEQ,
			C.FILE_ID,
			C.FILE_NAME,
			C.SAVE_FILE_NAME,
			C.FILE_PATH,
			SUBSTRING(C.FILE_EXTSN,1,3) FILE_EXTSN
		FROM 
			MANAGE_LEVEL_REQST A
			LEFT JOIN ATTACHMENT_FILE_MAP B ON A.ATCHMNFL_ID = B.ATCHMNFL_ID
			LEFT JOIN ATTACHMENT_FILE_MASTR C ON B.FILE_ID = C.FILE_ID
		WHERE 
		1=1 
			AND A.MNG_LEVEL_IDX_SEQ = #{s_index_seq}
			AND A.INSTT_CD = #{instt_cd}
	</select>

	<select id="statusExaminInsttIdxFileList" parameterType="zvl" resultType="zvl">
		SELECT
			A.INDEX_SEQ INDEX_SEQ,
			C.FILE_ID,
			C.FILE_NAME,
			C.SAVE_FILE_NAME,
			C.FILE_PATH,
			B.ATCHMNFL_ID,
			SUBSTRING(C.FILE_EXTSN,1,3) FILE_EXTSN
		FROM 
			STATUS_EXAMIN_EVL A,
			ATTACHMENT_FILE_MAP B, 
			ATTACHMENT_FILE_MASTR C 
		WHERE 
		1=1 
			AND A.INDEX_SEQ = #{s_index_seq}
			AND A.INSTT_CD  = #{instt_cd}
			AND A.ATCHMNFL_ID = B.ATCHMNFL_ID
			AND B.FILE_ID = C.FILE_ID
	</select>

	<select id="statusExaminInsttFobjctFileList" parameterType="zvl" resultType="zvl">
		SELECT
			A.INDEX_SEQ INDEX_SEQ,
			C.FILE_ID,
			C.FILE_NAME,
			C.SAVE_FILE_NAME,
			C.FILE_PATH,
			B.ATCHMNFL_ID,
			SUBSTRING(C.FILE_EXTSN,1,3) FILE_EXTSN
		FROM 
			STATUS_EXAMIN_EVL A,
			ATTACHMENT_FILE_MAP B, 
			ATTACHMENT_FILE_MASTR C 
		WHERE 
		1=1 
			AND A.INDEX_SEQ = #{s_index_seq}
			AND A.INSTT_CD  = #{instt_cd}
			AND A.FOBJCT_ATCHMNFL_ID = B.ATCHMNFL_ID
			AND B.FILE_ID = C.FILE_ID
	</select>

	<select id="statusExaminInsttIdxDetailList" parameterType="zvl" resultType="zvl">
		SELECT
		    A.INDEX_SEQ,
		    A.INDEX_DETAIL_SEQ,
			A.CHECK_ITEM CHECK_ITEM,
			B.ATCHMNFL_ID,
			B.RESULT_SCORE1,
			B.RESULT_SCORE2,
			B.STATUS,
			B.MEMO,
			B.EVL_OPINION,
			C.RESULT_SCORE1  detailScore1,
			C.RESULT_SCORE2  detailScore2
		FROM 
			STATUS_EXAMIN_IDX_DETAIL A
			LEFT JOIN STATUS_EXAMIN_EVL B ON B.INSTT_CD=#{instt_cd}  AND A.INDEX_SEQ = B.INDEX_SEQ 
			LEFT JOIN STATUS_EXAMIN_EVL_DETAIL C ON C.INSTT_CD=#{instt_cd} AND B.INSTT_CD = C.INSTT_CD AND B.INDEX_SEQ = C.INDEX_SEQ AND A.INDEX_DETAIL_SEQ = C.INDEX_DETAIL_SEQ 
		WHERE 
		1=1 
			AND A.INDEX_SEQ =#{s_index_seq}
		ORDER BY A.INDEX_DETAIL_SEQ
	</select>
	
	<select id="selectStatusExaminMastrList" parameterType="zvl" resultType="zvl">
		SELECT 
			A.INDEX_SEQ indexSeq,
			A.ORDER_NO orderNo,
			A.LCLAS lclas,
			A.LCLAS_ORDER lclasOrder,
      		B.lclasCnt,
			A.MLSFC mlsfc,
			A.MLSFC_ORDER mlsfcOrder,
      		C.mlsfcCnt,
			A.CHECK_ITEM checkItem,
			A.HELP_COMMENT helpComment,
			A.REMARK remark,
			A.RESULT_SE resultSe,
			A.EXCP_PERM_YN excpPermYn,
			A.REGIST_DT registDt,
			A.REGIST_ID registId,
			A.UPDT_DT updtDt,
			A.UPDT_ID updtId,
			A.DELETE_DT deleteDt,
			A.DELETE_ID deleteId,
			A.DELETE_YN deleteYn,
			#{insttCd} insttCd, 
			D.ATCHMNFL_ID atchmnflId,
      		D.FILE_ID     fileId,
      		D.FILE_NAME   fileName,
      		D.STATUS      status,
      		D.SAVE_FILE_NAME   saveFileName,
      		D.FILE_PATH   filePath,
      		D.RERGIST_REQUST_CN  requstCn,
      		D.RERGIST_REQUST_DE  requstDe,
      		D.EXCP_PERM_YN  excpYn,
      		SUBSTRING(D.FILE_EXTSN,1,3)    fileExtsn
		FROM
			STATUS_EXAMIN_IDX A 
		        LEFT OUTER JOIN(
		          SELECT ORDER_NO, LCLAS, COUNT(*) lclasCnt
		          FROM STATUS_EXAMIN_IDX
		          GROUP BY ORDER_NO, LCLAS
		        ) B
		        ON A.ORDER_NO = B.ORDER_NO AND A.LCLAS = B.LCLAS
		        LEFT OUTER JOIN(
		          SELECT ORDER_NO, LCLAS, MLSFC, COUNT(*) mlsfcCnt
		          FROM STATUS_EXAMIN_IDX
		          GROUP BY ORDER_NO, LCLAS, MLSFC
		        ) C
		        ON A.ORDER_NO = C.ORDER_NO AND A.LCLAS = C.LCLAS AND A.MLSFC = C.MLSFC
		        LEFT OUTER JOIN(
		          SELECT Z.INSTT_CD, Z.ORDER_NO, Z.STATUS_EXAMIN_IDX_SEQ, Z.STATUS, Z.RERGIST_REQUST_CN, Z.RERGIST_REQUST_DE, Z.EXCP_PERM_YN, Y.ATCHMNFL_ID, Y.FILE_ID, Y.FILE_NAME, Y.FILE_EXTSN, Y.SAVE_FILE_NAME, Y.FILE_PATH, Y.REGIST_DT
		          FROM STATUS_EXAMIN_REQST Z
                		LEFT OUTER JOIN(
                     		SELECT AA.ATCHMNFL_ID ATCHMNFL_ID,AA.REGIST_DT REGIST_DT ,BB.SAVE_FILE_NAME SAVE_FILE_NAME,BB.FILE_PATH FILE_PATH,BB.FILE_EXTSN FILE_EXTSN, BB.FILE_ID FILE_ID, BB.FILE_NAME FILE_NAME
		                	 FROM  ATTACHMENT_FILE_MAP AA, ATTACHMENT_FILE_MASTR BB
                     		WHERE AA.FILE_ID = BB.FILE_ID
                		) Y
                		ON Z.ATCHMNFL_ID = Y.ATCHMNFL_ID 
                   WHERE Z.INSTT_CD =#{insttCd}
		        ) D
		        ON A.ORDER_NO = D.ORDER_NO AND A.INDEX_SEQ = D.STATUS_EXAMIN_IDX_SEQ
		WHERE
			A.ORDER_NO = #{orderNo}
			<if test='null != lclas and "" != lclas'>
			AND A.LCLAS = #{lclas}
			</if>
		ORDER BY A.LCLAS_ORDER, A.MLSFC_ORDER, A.INDEX_SEQ, D.REGIST_DT
	</select>
	
	<select id="selectLclasOrderCnt" resultType="int">
		SELECT MAX(LCLAS_ORDER) + 1
		FROM STATUS_EXAMIN_IDX;
	</select>

	<select id="selectStatusExaminGnrlzEvlCnt" parameterType="zvl" resultType="int">
		SELECT COUNT(*)
		FROM STATUS_EXAMIN_GNRLZ_EVL
		WHERE INSTT_CD =#{insttCd}
		  AND ORDER_NO =#{orderNo}
	</select>

	<select id="selectStatusExaminEvlCnt" parameterType="zvl" resultType="int">
		SELECT COUNT(*)
		FROM STATUS_EXAMIN_EVL
		WHERE INSTT_CD =#{insttCd}
		  AND INDEX_SEQ = #{indexSeq}
	</select>
	
	<select id="selectStatusExaminEvlSum" parameterType="zvl" resultType="zvl">
		SELECT 
			   ROUND(AVG(RESULT_SCORE1), 2) AS RESULT_SCORE1,
			   ROUND(AVG(RESULT_SCORE2), 2) AS RESULT_SCORE2
		FROM STATUS_EXAMIN_EVL A, STATUS_EXAMIN_IDX B
		WHERE A.INDEX_SEQ = B.INDEX_SEQ
		  AND A.INSTT_CD =#{insttCd}
		  AND B.ORDER_NO =#{orderNo}
	</select>


	<select id="selectStatusExaminEvlDetailCnt" parameterType="zvl" resultType="int">
		SELECT COUNT(*)
		FROM STATUS_EXAMIN_EVL_DETAIL
		WHERE INSTT_CD =#{insttCd}
		  AND INDEX_SEQ = #{indexSeq}
		  AND INDEX_DETAIL_SEQ  = #{indexDetailSeq};
	</select>

	<select id="selectCntStatusExaminReqstStatus" parameterType="zvl" resultType="zvl">
		SELECT STATUS status, COUNT(*) cnt
		FROM STATUS_EXAMIN_REQST
		WHERE INSTT_CD =#{insttCd}
		  AND ORDER_NO =#{orderNo}
		  <if test='null != mngLevelIdxSeq and "" != mngLevelIdxSeq'>
		  AND STATUS_EXAMIN_IDX_SEQ=#{mngLevelIdxSeq}
		  </if>
		  <if test='null != reqStatus and "" != reqStatus'>
		  AND STATUS=#{reqStatus}
		  </if>
		GROUP BY STATUS;
	</select>

	<select id="seleteStatusExaminResFileCnt" parameterType="zvl"  resultType="int">
		SELECT COUNT(*)
		FROM
			ATTACHMENT_FILE_MAP
		WHERE
			ATCHMNFL_ID = #{atchmnflId}
	</select>

	<select id="statusExaminGnrlzEvl" parameterType="zvl" resultType="zvl">
		SELECT 
			A.INSTT_CD,
			A.ORDER_NO, 
			A.GNRLZ_EVL1, 
			A.GNRLZ_EVL2, 
			A.MEMO,
			A.ATCHMNFL_ID,
			A.TOT_RESULT_SCORE1,
			A.TOT_RESULT_SCORE2,
			A.STATUS,
			CASE
				WHEN  A.UPDT_ID IS NOT NULL THEN (SELECT USER_NM FROM USER_MASTR WHERE A.UPDT_ID = USER_ID)
				ELSE (SELECT USER_NM FROM USER_MASTR WHERE A.REGIST_ID = USER_ID)
			END evalUserNm,
			CASE
				WHEN  A.UPDT_DT IS NOT NULL THEN DATE_FORMAT(A.UPDT_DT, '%Y.%m.%d')
				ELSE DATE_FORMAT(A.REGIST_DT, '%Y.%m.%d')
			END evalDt
		FROM
			STATUS_EXAMIN_GNRLZ_EVL A
		WHERE
			1=1
		<if test='order_no != null and order_no != ""'>
			AND A.ORDER_NO = #{order_no}
		</if>
		<if test='instt_cd != null and instt_cd != ""'>
			AND A.INSTT_CD = #{instt_cd}
		</if>
	</select>
	
	<select id="selectStatusExaminEvl" parameterType="zvl" resultType="zvl">
		SELECT 
			INSTT_CD,
			INDEX_SEQ,
			RESULT_SCORE1,
			RESULT_SCORE2,
			STATUS,
			MEMO,
			EVL_OPINION,
			ATCHMNFL_ID,
			REGIST_DT,
			REGIST_ID,
			UPDT_DT,
			UPDT_ID,
			DELETE_YN
		 FROM    STATUS_EXAMIN_EVL	  
		WHERE	INSTT_CD		  = #{insttCd}
		  AND   INDEX_SEQ         = #{indexSeq}
	</select>

	<select id="selectStatusExaminEvlDetail" parameterType="zvl" resultType="zvl">
		SELECT 
			INSTT_CD,
			INDEX_SEQ,
			INDEX_DETAIL_SEQ,
			RESULT_SCORE1,
			RESULT_SCORE2,
			MEMO,
			EVL_OPINION,
			REGIST_DT,
			REGIST_ID,
			UPDT_DT,
			UPDT_ID,
			DELETE_YN
		 FROM    STATUS_EXAMIN_EVL	  
		WHERE	INSTT_CD		  = #{insttCd}
		  AND   INDEX_SEQ         = #{indexSeq}
		  AND   INDEX_DETAIL_SEQ  = #{indexDetailSeq};
	</select>
	
	<select id="beforeOrderNo" parameterType="zvl" resultType="zvl">
			SELECT 
			  IFNULL(MAX(ORDER_NO),'') as orderNo
		FROM 
			ORDER_MASTR
		WHERE 
		   ORDER_NO <![CDATA[<]]> #{order_no};
	</select>

	<insert id="insertSttusExaminGnrlzEvl" parameterType="zvl">
		INSERT INTO STATUS_EXAMIN_GNRLZ_EVL
		(
			INSTT_CD,
			ORDER_NO,
			<if test='null != gnrlzEvl1 and "" != gnrlzEvl1'>		
			GNRLZ_EVL1,
			</if>
			<if test='null != gnrlzEvl2 and "" != gnrlzEvl2'>		
			GNRLZ_EVL2,
			</if>
			MEMO,
			ATCHMNFL_ID,
			<if test='null != totResultScore1 and "" != totResultScore1'>
			TOT_RESULT_SCORE1,
			</if>
			<if test='null != totResultScore2 and "" != totResultScore2'>
			TOT_RESULT_SCORE2,
			</if>
			<if test='null != status and "" != status'>			
			STATUS,
			</if>
			REGIST_DT,
			REGIST_ID,
			UPDT_DT,
			UPDT_ID,
			DELETE_YN
		)
		VALUES
		(
			#{insttCd},
			#{orderNo},
			<if test='null != gnrlzEvl1 and "" != gnrlzEvl1'>		
			#{gnrlzEvl1},
			</if>
			<if test='null != gnrlzEvl2 and "" != gnrlzEvl2'>		
			#{gnrlzEvl2},
			</if>
			#{memo},
			#{atchmnfl_id},
			<if test='null != totResultScore1 and "" != totResultScore1'>
			#{totResultScore1},
			</if>
			<if test='null != totResultScore1 and "" != totResultScore1'>
			#{totResultScore2},
			</if>
			<if test='null != status and "" != status'>			
			#{status},
			</if>
			now(),
			#{registId},
			now(),
			#{updtId},
			'N'			
		);

		<if test="file_ids != null and file_ids.length > 0">
			INSERT ATTACHMENT_FILE_MAP ( ATCHMNFL_ID, FILE_ID, TABLE_NM, TABLE_ID, REGIST_DT, REGIST_ID, DELETE_YN  )
			SELECT  #{atchmnfl_id}, FILE_ID, 'STATUS_EXAMIN_GNRLZ_EVL', LAST_INSERT_ID(), NOW(), #{registId}, 'N'
			FROM    ATTACHMENT_FILE_MASTR
			WHERE   FILE_ID IN 
			<foreach collection="file_ids" item="item" open="(" close=")" separator = "," >
 				#{item}
			</foreach>
			AND		1=1;
		</if>
		
	</insert>

	<update id="updateSttusExaminGnrlzEvl" parameterType="zvl">
		UPDATE	STATUS_EXAMIN_GNRLZ_EVL
		SET	ATCHMNFL_ID		= #{atchmnfl_id},
			<if test='null != gnrlzEvl1 and "" != gnrlzEvl1'>		
			GNRLZ_EVL1      = #{gnrlzEvl1},
			</if>
			<if test='null != gnrlzEvl2 and "" != gnrlzEvl2'>		
			GNRLZ_EVL2      = #{gnrlzEvl2},
			</if>
			MEMO            = #{memo},
			<if test='null != totResultScore1 and "" != totResultScore1'>
			TOT_RESULT_SCORE1   = #{totResultScore1},
			</if>
			<if test='null == totResultScore1 or "" == totResultScore1'>
			TOT_RESULT_SCORE1   = null,
			</if>
			<if test='null != totResultScore2 and "" != totResultScore2'>
			TOT_RESULT_SCORE2   = #{totResultScore2},
			</if>
			<if test='null == totResultScore2 or "" == totResultScore2'>
			TOT_RESULT_SCORE2   = null,
			</if>
			<if test='null != status and "" != status'>			
			STATUS          = #{status},
			</if>
			UPDT_DT			= NOW(),
			UPDT_ID			= #{updtId} 
		WHERE	INSTT_CD		  = #{insttCd}
		  AND   ORDER_NO          = #{orderNo};
		  
		  <if test="file_ids != null and file_ids.length > 0">
			INSERT ATTACHMENT_FILE_MAP ( ATCHMNFL_ID, FILE_ID, TABLE_NM, TABLE_ID, REGIST_DT, REGIST_ID, DELETE_YN  )
			SELECT  #{atchmnfl_id}, FILE_ID, 'STATUS_EXAMIN_GNRLZ_EVL', LAST_INSERT_ID(), NOW(), #{registId}, 'N'
			FROM    ATTACHMENT_FILE_MASTR
			WHERE   FILE_ID IN 
			<foreach collection="file_ids" item="item" open="(" close=")" separator = "," >
 				#{item}
			</foreach>
			AND		1=1;
		</if>
		  
	</update>
	
	<insert id="insertSttusExaminEvl" parameterType="zvl">
		INSERT INTO STATUS_EXAMIN_EVL
		(
			INSTT_CD,
			INDEX_SEQ,
			<if test='null != resultScore1 and "" != resultScore1'>
			RESULT_SCORE1,
			</if>
			<if test='null != resultScore2 and "" != resultScore2'>
			RESULT_SCORE2,
			</if>
			<if test='null != status and "" != status'>			
			STATUS,
			</if>
			MEMO,
			EVL_OPINION,
			ATCHMNFL_ID,
			REGIST_DT,
			REGIST_ID,
			UPDT_DT,
			UPDT_ID,
			DELETE_YN
		)
		VALUES
		(
			#{insttCd},
			#{indexSeq},
			<if test='null != resultScore1 and "" != resultScore1'>
			#{resultScore1},
			</if>
			<if test='null != resultScore2 and "" != resultScore2'>
			#{resultScore2},
			</if>
			<if test='null != status and "" != status'>			
			#{status},
			</if>
			#{memo},
			#{evlOpinion},
			#{atchmnfl_id},
			now(),
			#{registId},
			now(),
			#{updtId},
			'N'			
		);

		<if test="file_ids != null and file_ids.length > 0">
			INSERT ATTACHMENT_FILE_MAP ( ATCHMNFL_ID, FILE_ID, TABLE_NM, TABLE_ID, REGIST_DT, REGIST_ID, DELETE_YN  )
			SELECT  #{atchmnfl_id}, FILE_ID, 'STATUS_EXAMIN_EVL', LAST_INSERT_ID(), NOW(), #{registId}, 'N'
			FROM    ATTACHMENT_FILE_MASTR
			WHERE   FILE_ID IN 
			<foreach collection="file_ids" item="item" open="(" close=")" separator = "," >
 				#{item}
			</foreach>
			AND		1=1;
		</if>
		
	</insert>

	<update id="updateSttusExaminEvl" parameterType="zvl">
		UPDATE	STATUS_EXAMIN_EVL
		SET	ATCHMNFL_ID		= #{atchmnfl_id},
			MEMO            = #{memo},
			EVL_OPINION     = #{evlOpinion},
			<if test='null != resultScore1 and "" != resultScore1'>
			RESULT_SCORE1   = #{resultScore1},
			</if>
			<if test='null == resultScore1 or "" == resultScore1'>
			RESULT_SCORE1   = null,
			</if>
			<if test='null != resultScore2 and "" != resultScore2'>
			RESULT_SCORE2   = #{resultScore2},
			</if>
			<if test='null == resultScore2 or "" == resultScore2'>
			RESULT_SCORE2   = null,
			</if>
			<if test='null != status and "" != status'>			
			STATUS          = #{status},
			</if>
			UPDT_DT			= NOW(),
			UPDT_ID			= #{updtId} 
		WHERE	INSTT_CD		  = #{insttCd}
		  AND   INDEX_SEQ         = #{indexSeq};
		  
		  <if test="file_ids != null and file_ids.length > 0">
			INSERT ATTACHMENT_FILE_MAP ( ATCHMNFL_ID, FILE_ID, TABLE_NM, TABLE_ID, REGIST_DT, REGIST_ID, DELETE_YN  )
			SELECT  #{atchmnfl_id}, FILE_ID, 'STATUS_EXAMIN_EVL', LAST_INSERT_ID(), NOW(), #{registId}, 'N'
			FROM    ATTACHMENT_FILE_MASTR
			WHERE   FILE_ID IN 
			<foreach collection="file_ids" item="item" open="(" close=")" separator = "," >
 				#{item}
			</foreach>
			AND		1=1;
		</if>
		  
	</update>

	<insert id="insertSttusExaminEvlDetail" parameterType="zvl">
		INSERT INTO STATUS_EXAMIN_EVL_DETAIL
		(
			INSTT_CD,
			INDEX_SEQ,
			INDEX_DETAIL_SEQ,
			<if test='null != resultScore1 and "" != resultScore1'>
			RESULT_SCORE1,
			</if>
			<if test='null != resultScore2 and "" != resultScore2'>
			RESULT_SCORE2,
			</if>
			REGIST_DT,
			REGIST_ID,
			UPDT_DT,
			UPDT_ID,
			DELETE_YN
		)
		VALUES
		(
			#{insttCd},
			#{indexSeq},
			#{indexDetailSeq},
			<if test='null != resultScore1 and "" != resultScore1'>
			#{resultScore1},
			</if>
			<if test='null != resultScore2 and "" != resultScore2'>
			#{resultScore2},
			</if>
			now(),
			#{registId},
			now(),
			#{updtId},
			'N'			
		);
		
	</insert>

	<update id="updateSttusExaminEvlDetail" parameterType="zvl">
		UPDATE	STATUS_EXAMIN_EVL_DETAIL
		SET	UPDT_DT			= NOW(),
			<if test='null != resultScore1 and "" != resultScore1'>
			RESULT_SCORE1   = #{resultScore1},
			</if>
			<if test='null != resultScore2 and "" != resultScore2'>
			RESULT_SCORE2   = #{resultScore2},
			</if>
			UPDT_ID			= #{updtId} 
		WHERE	INSTT_CD		  = #{insttCd}
		  AND   INDEX_SEQ         = #{indexSeq}
		  AND   INDEX_DETAIL_SEQ  = #{indexDetailSeq};
		  		  
	</update>
	
	<delete id="deleteStatusExaminResFile" parameterType="zvl">
		DELETE
		FROM
			ATTACHMENT_FILE_MASTR
		WHERE
			FILE_ID = #{fileId}

	</delete>
	
	<delete id="deleteStatusExaminRes" parameterType="zvl">
		DELETE
		FROM
			ATTACHMENT_FILE_MAP
		WHERE
			ATCHMNFL_ID = #{atchmnflId}
		AND
			FILE_ID = #{fileId}
	</delete>

	<update id="updateStatusExaminEvlStat" parameterType="zvl">
		UPDATE	STATUS_EXAMIN_EVL
		SET	STATUS       	= #{status},
			UPDT_DT			= NOW(),
			UPDT_ID			= #{updtId} 
		WHERE	INSTT_CD		  = #{insttCd}
		  AND   INDEX_SEQ         IN (SELECT INDEX_SEQ FROM STATUS_EXAMIN_IDX WHERE ORDER_NO = #{orderNo});
	</update>

	<select id="statusExaminPreFileList" parameterType="zvl" resultType="zvl">
		SELECT
			C.FILE_ID fileId
		FROM
			STATUS_EXAMIN_GNRLZ_EVL A
			JOIN ATTACHMENT_FILE_MAP B
				ON A.ATCHMNFL_ID = B.ATCHMNFL_ID
			JOIN ATTACHMENT_FILE_MASTR C
				ON B.FILE_ID = C.FILE_ID
		WHERE
			A.ORDER_NO = ( SELECT MAX(D.ORDER_NO) FROM STATUS_EXAMIN_GNRLZ_EVL D 
			               WHERE D.INSTT_CD = #{instt_cd} AND D.ORDER_NO <![CDATA[<]]> #{order_no} )
		AND
			A.INSTT_CD = #{instt_cd}
	</select>

</mapper>